@page "/adminintro"
@using QRCoder

<PageTitle>Trivia For Cheeseheads</PageTitle>
<h3>Game Starting Shortly</h3>

<div class="title-container">
    <img src="/CHTrivia.png" alt="Login Background Title" class="title-image">
</div>
<h1>Trivia4CheeseHeads.com</h1>
<img src="data:image/png;base64,@(Game!.QrCode)" alt="QR Code">
<img src="/Kwik-Trip-Logo.jpg" alt="Login Background Title" style="width:240px;height:80px;">
<img src="/animation_500_Transparent.gif" alt="Login Background Title" style="width:240px; height:240px;">
<img src="/20240317_181934735_iOS.png" alt="Login Background Title" style="width:240px; height:90px;">
<br/>
<button @onclick="OnStart">Start</button>

@code {
    [Inject]
    Game? Game { get; set; }
    [Inject]
    Blazored.LocalStorage.ILocalStorageService? LocalStorage { get; set; }
    [Inject]
    JsConsole? JsConsole { get; set; }
    [Inject]
    NavigationManager? NavManager { get; set; }
    [Inject]
    ConcurrentDictionary<Guid, UserLogin>? UserLogins { get; set; }
    [Inject]
    LoginVerification? LoginVerify { get; set; }
    [Inject]
    UserLoginRepo? UserLoginRepo { get; set; }
    private UserLogin? User { get; set; }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                User = await UserLoginRepo!.Load();
                if (LoginVerify!.VerifyLogin(User, true) == false)
                {
                    NavManager!.NavigateTo("/");
                    return;
                }
                StateHasChanged();
            }
            catch (Exception ex)
            {
                await JsConsole!.LogAsync(ex.Message);
            }
        }
    }

    private async void OnStart()
    {
        Game!.Reset();
        (_, string message) = Game!.PickNextQuestion();
        await JsConsole!.LogAsync(message);
        NavManager!.NavigateTo("/AdminRound");
        Game!.ChangeState(GameState.InRound);
    }
}
