@page "/adminresult/{isCorrect:bool}"

<PageTitle>@Game?.GameName</PageTitle>
<div class="image-container">

    <img class="image-result" style="object-fit: contain;" src="@ImageUrl" />
    <div class="center-result blinker">
        @Message
    </div>

    <h3>Question</h3>
    @Game!.CurrentQuestion?.Text

    <h2>Correct Answer: </h2>

    <h3>@Game?.CurrentQuestion?.ListOptions?.FirstOrDefault(q => q.IsAnswer)?.Text</h3>
    
</div>

@code {

    [Inject]
    Game? Game { get; set; }
    [Inject]
    Blazored.LocalStorage.ILocalStorageService? LocalStorage { get; set; }
    [Inject]
    JsConsole? JsConsole { get; set; }
    [Inject]
    NavigationManager? NavManager { get; set; }
    [Inject]
    ConcurrentDictionary<Guid, UserLogin>? UserLogins { get; set; }
    [Inject]
    LoginVerification? LoginVerify { get; set; }
    [Inject]
    UserLoginRepo? UserLoginRepo { get; set; }
    private UserLogin? User { get; set; }

    [Parameter]
    public bool isCorrect { get; set; }
    public string? ImageUrl { get; set; }
    private string Message { get; set; } = "CORRECT";
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            User = await UserLoginRepo!.Load();
            if (LoginVerify!.VerifyLogin(User, true) == false)
            {
                NavManager!.NavigateTo("/");
                return;
            }
            StateHasChanged();

            Random random = new Random();
            int i = random.Next(1, 4);
            if (isCorrect)
            {
                ImageUrl = $"Correct{i}.jpg";
            }
            else
            {
                ImageUrl = $"Wrong{i}.jpg";
                Message = "WRONG";
            }
            StateHasChanged();
            
            await Task.Delay(10000);

            Game!.ChangeState(GameState.Leaderboard);
            NavManager!.NavigateTo("/AdminLeaderBoard");
        }
    }

}