// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TriviaForCheeseHeads.Data;

#nullable disable

namespace TriviaForCheeseHeads.Migrations
{
    [DbContext(typeof(TriviaForCheeseHeadsSqliteContext))]
    [Migration("20250622230056_OptionFKchange")]
    partial class OptionFKchange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.27");

            modelBuilder.Entity("TriviaForCheeseHeads.Data.TriviaQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AskedThisRound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Used")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("TriviaForCheeseHeads.Data.TriviaQuestion", b =>
                {
                    b.OwnsMany("TriviaForCheeseHeads.Data.TriviaQuestionOption", "ListOptions", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<string>("QuestionId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsAnswer")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id", "QuestionId");

                            b1.HasIndex("QuestionId");

                            b1.ToTable("TriviaQuestionOptions", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("QuestionId");
                        });

                    b.Navigation("ListOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
